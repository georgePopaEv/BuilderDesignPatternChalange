<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="8c33038a-5bee-4cb7-9a60-e13a8faff664" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2K39eQemmNf9yQl27iJ3t69jzow" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;
  }
}</component>
  <component name="RunManager">
    <configuration name="Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Client" />
      <module name="ChalangeBuilderDesignPattern" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Client" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="8c33038a-5bee-4cb7-9a60-e13a8faff664" name="Changes" comment="" />
      <created>1673192495167</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1673192495167</updated>
      <workItem from="1673192496443" duration="1313000" />
      <workItem from="1673258183145" duration="3041000" />
    </task>
    <task id="LOCAL-00001" summary="I have simulted an restaurant where I want to have 2 classess of burgers (non veg and Veg) and Also in our restaurat we would want to have drinks (cold drinks) for this, I have created an Item interface which contains price and name and I have implemented it in BurgersVeg and BurgersNonVeg, As wel I have created an abstract class implementing Item interface for using Packing class. I have created 2 classes extending ColdDrink">
      <created>1673261296114</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1673261296114</updated>
    </task>
    <option name="localTasksCounter" value="2" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="I have simulted an restaurant where I want to have 2 classess of burgers (non veg and Veg) and Also in our restaurat we would want to have drinks (cold drinks) for this, I have created an Item interface which contains price and name and I have implemented it in BurgersVeg and BurgersNonVeg, As wel I have created an abstract class implementing Item interface for using Packing class. I have created 2 classes extending ColdDrink" />
    <option name="LAST_COMMIT_MESSAGE" value="I have simulted an restaurant where I want to have 2 classess of burgers (non veg and Veg) and Also in our restaurat we would want to have drinks (cold drinks) for this, I have created an Item interface which contains price and name and I have implemented it in BurgersVeg and BurgersNonVeg, As wel I have created an abstract class implementing Item interface for using Packing class. I have created 2 classes extending ColdDrink" />
  </component>
</project>